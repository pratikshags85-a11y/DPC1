import java.util.*;

public class MergeSortedArrays {
    public static void merge(int[] arr1, int[] arr2) {
        int m = arr1.length;
        int n = arr2.length;
        int gap = nextGap(m + n);

        while (gap > 0) {
            int i = 0, j = gap;

            while (j < m + n) {
                int val1 = getValue(arr1, arr2, m, i);
                int val2 = getValue(arr1, arr2, m, j);

                if (val1 > val2) {
                    setValue(arr1, arr2, m, i, val2);
                    setValue(arr1, arr2, m, j, val1);
                }

                i++;
                j++;
            }

            gap = nextGap(gap);
        }
    }

    // Helper to calculate next gap
    private static int nextGap(int gap) {
        if (gap <= 1) return 0;
        return (gap + 1) / 2;
    }

    // Get value from virtual merged array
    private static int getValue(int[] arr1, int[] arr2, int m, int index) {
        return index < m ? arr1[index] : arr2[index - m];
    }

    // Set value in virtual merged array
    private static void setValue(int[] arr1, int[] arr2, int m, int index, int value) {
        if (index < m) arr1[index] = value;
        else arr2[index - m] = value;
    }

    // Test
    public static void main(String[] args) {
        int[] arr1 = {1, 3, 5, 7};
        int[] arr2 = {2, 4, 6, 8};

        merge(arr1, arr2);

        System.out.println("arr1: " + Arrays.toString(arr1)); // [1, 2, 3, 4]
        System.out.println("arr2: " + Arrays.toString(arr2)); // [5, 6, 7, 8]
    }
}
